//*
// Defines the WCDMA RRC OTA Channel Type values used in the WCDMA RRC message.
//
// This protobuf definition is provided as a convenience only. See the official API documentation for the true field
// schema.
//
// It is necessary to define this enum in an individual file so that duplicate enum values can be used. This file
// specifies a different protobuf package than other enums so that the enum value scope is different than all other
// enums.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: com/craxiom/messaging/wcdmarrcchanneltype/wcdma_rrc_channel_type.proto

package messaging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WcdmaRrcChannelType int32

const (
	WcdmaRrcChannelType_UNKNOWN                         WcdmaRrcChannelType = 0
	WcdmaRrcChannelType_DL_DCCH                         WcdmaRrcChannelType = 1
	WcdmaRrcChannelType_UL_DCCH                         WcdmaRrcChannelType = 2
	WcdmaRrcChannelType_DL_CCCH                         WcdmaRrcChannelType = 3
	WcdmaRrcChannelType_UL_CCCH                         WcdmaRrcChannelType = 4
	WcdmaRrcChannelType_PCCH                            WcdmaRrcChannelType = 5
	WcdmaRrcChannelType_DL_SHCCH                        WcdmaRrcChannelType = 6
	WcdmaRrcChannelType_UL_SHCCH                        WcdmaRrcChannelType = 7
	WcdmaRrcChannelType_BCCH_FACH                       WcdmaRrcChannelType = 8
	WcdmaRrcChannelType_BCCH_BCH                        WcdmaRrcChannelType = 9
	WcdmaRrcChannelType_MCCH                            WcdmaRrcChannelType = 10
	WcdmaRrcChannelType_MSCH                            WcdmaRrcChannelType = 11
	WcdmaRrcChannelType_HandoverToUTRANCommand          WcdmaRrcChannelType = 12
	WcdmaRrcChannelType_InterRATHandoverInfo            WcdmaRrcChannelType = 13
	WcdmaRrcChannelType_SystemInformation_BCH           WcdmaRrcChannelType = 14
	WcdmaRrcChannelType_System_Information_Container    WcdmaRrcChannelType = 15
	WcdmaRrcChannelType_UE_RadioAccessCapabilityInfo    WcdmaRrcChannelType = 16
	WcdmaRrcChannelType_MasterInformationBlock          WcdmaRrcChannelType = 17
	WcdmaRrcChannelType_SysInfoType1                    WcdmaRrcChannelType = 18
	WcdmaRrcChannelType_SysInfoType2                    WcdmaRrcChannelType = 19
	WcdmaRrcChannelType_SysInfoType3                    WcdmaRrcChannelType = 20
	WcdmaRrcChannelType_SysInfoType4                    WcdmaRrcChannelType = 21
	WcdmaRrcChannelType_SysInfoType5                    WcdmaRrcChannelType = 22
	WcdmaRrcChannelType_SysInfoType5bis                 WcdmaRrcChannelType = 23
	WcdmaRrcChannelType_SysInfoType6                    WcdmaRrcChannelType = 24
	WcdmaRrcChannelType_SysInfoType7                    WcdmaRrcChannelType = 25
	WcdmaRrcChannelType_SysInfoType8                    WcdmaRrcChannelType = 26
	WcdmaRrcChannelType_SysInfoType9                    WcdmaRrcChannelType = 27
	WcdmaRrcChannelType_SysInfoType10                   WcdmaRrcChannelType = 28
	WcdmaRrcChannelType_SysInfoType11                   WcdmaRrcChannelType = 29
	WcdmaRrcChannelType_SysInfoType11bis                WcdmaRrcChannelType = 30
	WcdmaRrcChannelType_SysInfoType12                   WcdmaRrcChannelType = 31
	WcdmaRrcChannelType_SysInfoType13                   WcdmaRrcChannelType = 32
	WcdmaRrcChannelType_SysInfoType13_1                 WcdmaRrcChannelType = 33
	WcdmaRrcChannelType_SysInfoType13_2                 WcdmaRrcChannelType = 34
	WcdmaRrcChannelType_SysInfoType13_3                 WcdmaRrcChannelType = 35
	WcdmaRrcChannelType_SysInfoType13_4                 WcdmaRrcChannelType = 36
	WcdmaRrcChannelType_SysInfoType14                   WcdmaRrcChannelType = 37
	WcdmaRrcChannelType_SysInfoType15                   WcdmaRrcChannelType = 38
	WcdmaRrcChannelType_SysInfoType15bis                WcdmaRrcChannelType = 39
	WcdmaRrcChannelType_SysInfoType15_1                 WcdmaRrcChannelType = 40
	WcdmaRrcChannelType_SysInfoType15_1bis              WcdmaRrcChannelType = 41
	WcdmaRrcChannelType_SysInfoType15_2                 WcdmaRrcChannelType = 42
	WcdmaRrcChannelType_SysInfoType15_2bis              WcdmaRrcChannelType = 43
	WcdmaRrcChannelType_SysInfoType15_2ter              WcdmaRrcChannelType = 44
	WcdmaRrcChannelType_SysInfoType15_3                 WcdmaRrcChannelType = 45
	WcdmaRrcChannelType_SysInfoType15_3bis              WcdmaRrcChannelType = 46
	WcdmaRrcChannelType_SysInfoType15_4                 WcdmaRrcChannelType = 47
	WcdmaRrcChannelType_SysInfoType15_5                 WcdmaRrcChannelType = 48
	WcdmaRrcChannelType_SysInfoType15_6                 WcdmaRrcChannelType = 49
	WcdmaRrcChannelType_SysInfoType15_7                 WcdmaRrcChannelType = 50
	WcdmaRrcChannelType_SysInfoType15_8                 WcdmaRrcChannelType = 51
	WcdmaRrcChannelType_SysInfoType16                   WcdmaRrcChannelType = 52
	WcdmaRrcChannelType_SysInfoType17                   WcdmaRrcChannelType = 53
	WcdmaRrcChannelType_SysInfoType18                   WcdmaRrcChannelType = 54
	WcdmaRrcChannelType_SysInfoType19                   WcdmaRrcChannelType = 55
	WcdmaRrcChannelType_SysInfoType20                   WcdmaRrcChannelType = 56
	WcdmaRrcChannelType_SysInfoType21                   WcdmaRrcChannelType = 57
	WcdmaRrcChannelType_SysInfoType22                   WcdmaRrcChannelType = 58
	WcdmaRrcChannelType_SysInfoTypeSB1                  WcdmaRrcChannelType = 59
	WcdmaRrcChannelType_SysInfoTypeSB2                  WcdmaRrcChannelType = 60
	WcdmaRrcChannelType_ToTargetRNC_Container           WcdmaRrcChannelType = 61
	WcdmaRrcChannelType_TargetRNC_ToSourceRNC_Container WcdmaRrcChannelType = 62
)

// Enum value maps for WcdmaRrcChannelType.
var (
	WcdmaRrcChannelType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "DL_DCCH",
		2:  "UL_DCCH",
		3:  "DL_CCCH",
		4:  "UL_CCCH",
		5:  "PCCH",
		6:  "DL_SHCCH",
		7:  "UL_SHCCH",
		8:  "BCCH_FACH",
		9:  "BCCH_BCH",
		10: "MCCH",
		11: "MSCH",
		12: "HandoverToUTRANCommand",
		13: "InterRATHandoverInfo",
		14: "SystemInformation_BCH",
		15: "System_Information_Container",
		16: "UE_RadioAccessCapabilityInfo",
		17: "MasterInformationBlock",
		18: "SysInfoType1",
		19: "SysInfoType2",
		20: "SysInfoType3",
		21: "SysInfoType4",
		22: "SysInfoType5",
		23: "SysInfoType5bis",
		24: "SysInfoType6",
		25: "SysInfoType7",
		26: "SysInfoType8",
		27: "SysInfoType9",
		28: "SysInfoType10",
		29: "SysInfoType11",
		30: "SysInfoType11bis",
		31: "SysInfoType12",
		32: "SysInfoType13",
		33: "SysInfoType13_1",
		34: "SysInfoType13_2",
		35: "SysInfoType13_3",
		36: "SysInfoType13_4",
		37: "SysInfoType14",
		38: "SysInfoType15",
		39: "SysInfoType15bis",
		40: "SysInfoType15_1",
		41: "SysInfoType15_1bis",
		42: "SysInfoType15_2",
		43: "SysInfoType15_2bis",
		44: "SysInfoType15_2ter",
		45: "SysInfoType15_3",
		46: "SysInfoType15_3bis",
		47: "SysInfoType15_4",
		48: "SysInfoType15_5",
		49: "SysInfoType15_6",
		50: "SysInfoType15_7",
		51: "SysInfoType15_8",
		52: "SysInfoType16",
		53: "SysInfoType17",
		54: "SysInfoType18",
		55: "SysInfoType19",
		56: "SysInfoType20",
		57: "SysInfoType21",
		58: "SysInfoType22",
		59: "SysInfoTypeSB1",
		60: "SysInfoTypeSB2",
		61: "ToTargetRNC_Container",
		62: "TargetRNC_ToSourceRNC_Container",
	}
	WcdmaRrcChannelType_value = map[string]int32{
		"UNKNOWN":                         0,
		"DL_DCCH":                         1,
		"UL_DCCH":                         2,
		"DL_CCCH":                         3,
		"UL_CCCH":                         4,
		"PCCH":                            5,
		"DL_SHCCH":                        6,
		"UL_SHCCH":                        7,
		"BCCH_FACH":                       8,
		"BCCH_BCH":                        9,
		"MCCH":                            10,
		"MSCH":                            11,
		"HandoverToUTRANCommand":          12,
		"InterRATHandoverInfo":            13,
		"SystemInformation_BCH":           14,
		"System_Information_Container":    15,
		"UE_RadioAccessCapabilityInfo":    16,
		"MasterInformationBlock":          17,
		"SysInfoType1":                    18,
		"SysInfoType2":                    19,
		"SysInfoType3":                    20,
		"SysInfoType4":                    21,
		"SysInfoType5":                    22,
		"SysInfoType5bis":                 23,
		"SysInfoType6":                    24,
		"SysInfoType7":                    25,
		"SysInfoType8":                    26,
		"SysInfoType9":                    27,
		"SysInfoType10":                   28,
		"SysInfoType11":                   29,
		"SysInfoType11bis":                30,
		"SysInfoType12":                   31,
		"SysInfoType13":                   32,
		"SysInfoType13_1":                 33,
		"SysInfoType13_2":                 34,
		"SysInfoType13_3":                 35,
		"SysInfoType13_4":                 36,
		"SysInfoType14":                   37,
		"SysInfoType15":                   38,
		"SysInfoType15bis":                39,
		"SysInfoType15_1":                 40,
		"SysInfoType15_1bis":              41,
		"SysInfoType15_2":                 42,
		"SysInfoType15_2bis":              43,
		"SysInfoType15_2ter":              44,
		"SysInfoType15_3":                 45,
		"SysInfoType15_3bis":              46,
		"SysInfoType15_4":                 47,
		"SysInfoType15_5":                 48,
		"SysInfoType15_6":                 49,
		"SysInfoType15_7":                 50,
		"SysInfoType15_8":                 51,
		"SysInfoType16":                   52,
		"SysInfoType17":                   53,
		"SysInfoType18":                   54,
		"SysInfoType19":                   55,
		"SysInfoType20":                   56,
		"SysInfoType21":                   57,
		"SysInfoType22":                   58,
		"SysInfoTypeSB1":                  59,
		"SysInfoTypeSB2":                  60,
		"ToTargetRNC_Container":           61,
		"TargetRNC_ToSourceRNC_Container": 62,
	}
)

func (x WcdmaRrcChannelType) Enum() *WcdmaRrcChannelType {
	p := new(WcdmaRrcChannelType)
	*p = x
	return p
}

func (x WcdmaRrcChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WcdmaRrcChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_enumTypes[0].Descriptor()
}

func (WcdmaRrcChannelType) Type() protoreflect.EnumType {
	return &file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_enumTypes[0]
}

func (x WcdmaRrcChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WcdmaRrcChannelType.Descriptor instead.
func (WcdmaRrcChannelType) EnumDescriptor() ([]byte, []int) {
	return file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDescGZIP(), []int{0}
}

var File_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto protoreflect.FileDescriptor

var file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDesc = []byte{
	0x0a, 0x46, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x77, 0x63, 0x64, 0x6d, 0x61, 0x72, 0x72, 0x63,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x77, 0x63, 0x64, 0x6d,
	0x61, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72,
	0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e,
	0x77, 0x63, 0x64, 0x6d, 0x61, 0x72, 0x72, 0x63, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x74,
	0x79, 0x70, 0x65, 0x2a, 0xfc, 0x09, 0x0a, 0x13, 0x57, 0x63, 0x64, 0x6d, 0x61, 0x52, 0x72, 0x63,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x4c, 0x5f, 0x44,
	0x43, 0x43, 0x48, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4c, 0x5f, 0x44, 0x43, 0x43, 0x48,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x10, 0x03, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x43, 0x43, 0x48, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4c, 0x5f, 0x53, 0x48, 0x43,
	0x43, 0x48, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4c, 0x5f, 0x53, 0x48, 0x43, 0x43, 0x48,
	0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x43, 0x43, 0x48, 0x5f, 0x46, 0x41, 0x43, 0x48, 0x10,
	0x08, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x43, 0x43, 0x48, 0x5f, 0x42, 0x43, 0x48, 0x10, 0x09, 0x12,
	0x08, 0x0a, 0x04, 0x4d, 0x43, 0x43, 0x48, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x53, 0x43,
	0x48, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x61, 0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x54,
	0x6f, 0x55, 0x54, 0x52, 0x41, 0x4e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x0c, 0x12,
	0x18, 0x0a, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x41, 0x54, 0x48, 0x61, 0x6e, 0x64, 0x6f,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x42,
	0x43, 0x48, 0x10, 0x0e, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x10, 0x0f, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x45, 0x5f, 0x52, 0x61, 0x64,
	0x69, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x10, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x10, 0x11, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x31, 0x10, 0x12, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x32, 0x10, 0x13, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x33, 0x10, 0x14, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x34, 0x10, 0x15, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x35, 0x10, 0x16, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x35, 0x62, 0x69,
	0x73, 0x10, 0x17, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x36, 0x10, 0x18, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x37, 0x10, 0x19, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x38, 0x10, 0x1a, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x39, 0x10, 0x1b, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x30, 0x10, 0x1c, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x31, 0x10,
	0x1d, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x31, 0x31, 0x62, 0x69, 0x73, 0x10, 0x1e, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x32, 0x10, 0x1f, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x33, 0x10, 0x20, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x33, 0x5f, 0x31,
	0x10, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x31, 0x33, 0x5f, 0x32, 0x10, 0x22, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x33, 0x5f, 0x33, 0x10, 0x23, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x33, 0x5f, 0x34, 0x10,
	0x24, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x31, 0x34, 0x10, 0x25, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x31, 0x35, 0x10, 0x26, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35, 0x62, 0x69, 0x73, 0x10, 0x27, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35, 0x5f, 0x31,
	0x10, 0x28, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x31, 0x35, 0x5f, 0x31, 0x62, 0x69, 0x73, 0x10, 0x29, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35, 0x5f, 0x32, 0x10, 0x2a, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35,
	0x5f, 0x32, 0x62, 0x69, 0x73, 0x10, 0x2b, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35, 0x5f, 0x32, 0x74, 0x65, 0x72, 0x10, 0x2c, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35,
	0x5f, 0x33, 0x10, 0x2d, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x31, 0x35, 0x5f, 0x33, 0x62, 0x69, 0x73, 0x10, 0x2e, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35, 0x5f, 0x34, 0x10,
	0x2f, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x31, 0x35, 0x5f, 0x35, 0x10, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35, 0x5f, 0x36, 0x10, 0x31, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35, 0x5f, 0x37, 0x10, 0x32,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31,
	0x35, 0x5f, 0x38, 0x10, 0x33, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x31, 0x36, 0x10, 0x34, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x37, 0x10, 0x35, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x38, 0x10, 0x36, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x31, 0x39, 0x10,
	0x37, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x32, 0x30, 0x10, 0x38, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x32, 0x31, 0x10, 0x39, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x32, 0x32, 0x10, 0x3a, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x79,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x53, 0x42, 0x31, 0x10, 0x3b, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x53, 0x42, 0x32,
	0x10, 0x3c, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x6f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x4e,
	0x43, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x10, 0x3d, 0x12, 0x23, 0x0a,
	0x1f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x4e, 0x43, 0x5f, 0x54, 0x6f, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x4e, 0x43, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x10, 0x3e, 0x42, 0x30, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x01, 0x5a, 0x15, 0x63,
	0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDescOnce sync.Once
	file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDescData = file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDesc
)

func file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDescGZIP() []byte {
	file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDescOnce.Do(func() {
		file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDescData)
	})
	return file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDescData
}

var file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_goTypes = []any{
	(WcdmaRrcChannelType)(0), // 0: com.craxiom.messaging.wcdmarrcchanneltype.WcdmaRrcChannelType
}
var file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_init() }
func file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_init() {
	if File_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_goTypes,
		DependencyIndexes: file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_depIdxs,
		EnumInfos:         file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_enumTypes,
	}.Build()
	File_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto = out.File
	file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_rawDesc = nil
	file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_goTypes = nil
	file_com_craxiom_messaging_wcdmarrcchanneltype_wcdma_rrc_channel_type_proto_depIdxs = nil
}
