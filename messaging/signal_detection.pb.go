//*
// A protobuf definition of the Signal Detection message defined in the Network Survey Messaging API.
//
// This protobuf definition is provided as a convenience only. See the official API documentation for the true Signal
// Detection message schema.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: com/craxiom/messaging/signal_detection.proto

package messaging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalDetection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	MessageType string               `protobuf:"bytes,2,opt,name=messageType,proto3" json:"messageType,omitempty"`
	Data        *SignalDetectionData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SignalDetection) Reset() {
	*x = SignalDetection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_craxiom_messaging_signal_detection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalDetection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalDetection) ProtoMessage() {}

func (x *SignalDetection) ProtoReflect() protoreflect.Message {
	mi := &file_com_craxiom_messaging_signal_detection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalDetection.ProtoReflect.Descriptor instead.
func (*SignalDetection) Descriptor() ([]byte, []int) {
	return file_com_craxiom_messaging_signal_detection_proto_rawDescGZIP(), []int{0}
}

func (x *SignalDetection) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SignalDetection) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *SignalDetection) GetData() *SignalDetectionData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SignalDetectionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceSerialNumber string  `protobuf:"bytes,1,opt,name=deviceSerialNumber,proto3" json:"deviceSerialNumber,omitempty"`
	DeviceName         string  `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	DeviceTime         string  `protobuf:"bytes,3,opt,name=deviceTime,proto3" json:"deviceTime,omitempty"`
	Latitude           float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude          float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude           float32 `protobuf:"fixed32,6,opt,name=altitude,proto3" json:"altitude,omitempty"`
	MissionId          string  `protobuf:"bytes,7,opt,name=missionId,proto3" json:"missionId,omitempty"`
	RecordNumber       int32   `protobuf:"varint,8,opt,name=recordNumber,proto3" json:"recordNumber,omitempty"`
	GroupNumber        int32   `protobuf:"varint,9,opt,name=groupNumber,proto3" json:"groupNumber,omitempty"`
	Accuracy           int32   `protobuf:"varint,10,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	// Orientation of sensor and sensor parameters. optional.
	Heading             float32                `protobuf:"fixed32,50,opt,name=heading,proto3" json:"heading,omitempty"`
	Pitch               float32                `protobuf:"fixed32,51,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Roll                float32                `protobuf:"fixed32,52,opt,name=roll,proto3" json:"roll,omitempty"`
	FieldOfView         float32                `protobuf:"fixed32,53,opt,name=fieldOfView,proto3" json:"fieldOfView,omitempty"`
	ReceiverSensitivity float32                `protobuf:"fixed32,54,opt,name=receiverSensitivity,proto3" json:"receiverSensitivity,omitempty"`
	Speed               float32                `protobuf:"fixed32,55,opt,name=speed,proto3" json:"speed,omitempty"`
	FrequencyHz         uint64                 `protobuf:"varint,12,opt,name=frequencyHz,proto3" json:"frequencyHz,omitempty"`
	BandwidthHz         *wrapperspb.Int32Value `protobuf:"bytes,13,opt,name=bandwidthHz,proto3" json:"bandwidthHz,omitempty"`
	SignalStrength      float32                `protobuf:"fixed32,14,opt,name=signalStrength,proto3" json:"signalStrength,omitempty"`
	Snr                 *wrapperspb.FloatValue `protobuf:"bytes,15,opt,name=snr,proto3" json:"snr,omitempty"`
	TimeUp              string                 `protobuf:"bytes,16,opt,name=timeUp,proto3" json:"timeUp,omitempty"`
	DurationSec         *wrapperspb.FloatValue `protobuf:"bytes,17,opt,name=durationSec,proto3" json:"durationSec,omitempty"`
	Modulation          string                 `protobuf:"bytes,18,opt,name=modulation,proto3" json:"modulation,omitempty"`
	SignalName          string                 `protobuf:"bytes,19,opt,name=signalName,proto3" json:"signalName,omitempty"`
}

func (x *SignalDetectionData) Reset() {
	*x = SignalDetectionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_craxiom_messaging_signal_detection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalDetectionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalDetectionData) ProtoMessage() {}

func (x *SignalDetectionData) ProtoReflect() protoreflect.Message {
	mi := &file_com_craxiom_messaging_signal_detection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalDetectionData.ProtoReflect.Descriptor instead.
func (*SignalDetectionData) Descriptor() ([]byte, []int) {
	return file_com_craxiom_messaging_signal_detection_proto_rawDescGZIP(), []int{1}
}

func (x *SignalDetectionData) GetDeviceSerialNumber() string {
	if x != nil {
		return x.DeviceSerialNumber
	}
	return ""
}

func (x *SignalDetectionData) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SignalDetectionData) GetDeviceTime() string {
	if x != nil {
		return x.DeviceTime
	}
	return ""
}

func (x *SignalDetectionData) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *SignalDetectionData) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *SignalDetectionData) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *SignalDetectionData) GetMissionId() string {
	if x != nil {
		return x.MissionId
	}
	return ""
}

func (x *SignalDetectionData) GetRecordNumber() int32 {
	if x != nil {
		return x.RecordNumber
	}
	return 0
}

func (x *SignalDetectionData) GetGroupNumber() int32 {
	if x != nil {
		return x.GroupNumber
	}
	return 0
}

func (x *SignalDetectionData) GetAccuracy() int32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *SignalDetectionData) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *SignalDetectionData) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *SignalDetectionData) GetRoll() float32 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *SignalDetectionData) GetFieldOfView() float32 {
	if x != nil {
		return x.FieldOfView
	}
	return 0
}

func (x *SignalDetectionData) GetReceiverSensitivity() float32 {
	if x != nil {
		return x.ReceiverSensitivity
	}
	return 0
}

func (x *SignalDetectionData) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *SignalDetectionData) GetFrequencyHz() uint64 {
	if x != nil {
		return x.FrequencyHz
	}
	return 0
}

func (x *SignalDetectionData) GetBandwidthHz() *wrapperspb.Int32Value {
	if x != nil {
		return x.BandwidthHz
	}
	return nil
}

func (x *SignalDetectionData) GetSignalStrength() float32 {
	if x != nil {
		return x.SignalStrength
	}
	return 0
}

func (x *SignalDetectionData) GetSnr() *wrapperspb.FloatValue {
	if x != nil {
		return x.Snr
	}
	return nil
}

func (x *SignalDetectionData) GetTimeUp() string {
	if x != nil {
		return x.TimeUp
	}
	return ""
}

func (x *SignalDetectionData) GetDurationSec() *wrapperspb.FloatValue {
	if x != nil {
		return x.DurationSec
	}
	return nil
}

func (x *SignalDetectionData) GetModulation() string {
	if x != nil {
		return x.Modulation
	}
	return ""
}

func (x *SignalDetectionData) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

var File_com_craxiom_messaging_signal_detection_proto protoreflect.FileDescriptor

var file_com_craxiom_messaging_signal_detection_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd8, 0x06, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a,
	0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72,
	0x61, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72,
	0x61, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x33, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69,
	0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x66, 0x56, 0x69, 0x65, 0x77, 0x18, 0x35, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x66, 0x56, 0x69, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x18, 0x36, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x7a,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x48, 0x7a, 0x12, 0x3d, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x48, 0x7a, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x48, 0x7a, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x03, 0x73, 0x6e,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x73, 0x6e, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d,
	0x65, 0x55, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x55,
	0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x42, 0x30, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x01, 0x5a, 0x15, 0x63, 0x72, 0x61,
	0x78, 0x69, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_craxiom_messaging_signal_detection_proto_rawDescOnce sync.Once
	file_com_craxiom_messaging_signal_detection_proto_rawDescData = file_com_craxiom_messaging_signal_detection_proto_rawDesc
)

func file_com_craxiom_messaging_signal_detection_proto_rawDescGZIP() []byte {
	file_com_craxiom_messaging_signal_detection_proto_rawDescOnce.Do(func() {
		file_com_craxiom_messaging_signal_detection_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_craxiom_messaging_signal_detection_proto_rawDescData)
	})
	return file_com_craxiom_messaging_signal_detection_proto_rawDescData
}

var file_com_craxiom_messaging_signal_detection_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_com_craxiom_messaging_signal_detection_proto_goTypes = []any{
	(*SignalDetection)(nil),       // 0: com.craxiom.messaging.SignalDetection
	(*SignalDetectionData)(nil),   // 1: com.craxiom.messaging.SignalDetectionData
	(*wrapperspb.Int32Value)(nil), // 2: google.protobuf.Int32Value
	(*wrapperspb.FloatValue)(nil), // 3: google.protobuf.FloatValue
}
var file_com_craxiom_messaging_signal_detection_proto_depIdxs = []int32{
	1, // 0: com.craxiom.messaging.SignalDetection.data:type_name -> com.craxiom.messaging.SignalDetectionData
	2, // 1: com.craxiom.messaging.SignalDetectionData.bandwidthHz:type_name -> google.protobuf.Int32Value
	3, // 2: com.craxiom.messaging.SignalDetectionData.snr:type_name -> google.protobuf.FloatValue
	3, // 3: com.craxiom.messaging.SignalDetectionData.durationSec:type_name -> google.protobuf.FloatValue
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_com_craxiom_messaging_signal_detection_proto_init() }
func file_com_craxiom_messaging_signal_detection_proto_init() {
	if File_com_craxiom_messaging_signal_detection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_com_craxiom_messaging_signal_detection_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SignalDetection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_craxiom_messaging_signal_detection_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SignalDetectionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_craxiom_messaging_signal_detection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_craxiom_messaging_signal_detection_proto_goTypes,
		DependencyIndexes: file_com_craxiom_messaging_signal_detection_proto_depIdxs,
		MessageInfos:      file_com_craxiom_messaging_signal_detection_proto_msgTypes,
	}.Build()
	File_com_craxiom_messaging_signal_detection_proto = out.File
	file_com_craxiom_messaging_signal_detection_proto_rawDesc = nil
	file_com_craxiom_messaging_signal_detection_proto_goTypes = nil
	file_com_craxiom_messaging_signal_detection_proto_depIdxs = nil
}
