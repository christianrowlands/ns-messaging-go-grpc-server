//*
// Defines the LTE RRC OTA Channel Type values used in the LTE RRC message.
//
// This protobuf definition is provided as a convenience only. See the official API documentation for the true field
// schema.
//
// It is necessary to define this enum in an individual file so that duplicate enum values can be used. This file
// specifies a different protobuf package than other enums so that the enum value scope is different than all other
// enums.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: com/craxiom/messaging/lterrcchanneltype/lte_rrc_channel_type.proto

package messaging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LteRrcChannelType int32

const (
	LteRrcChannelType_UNKNOWN          LteRrcChannelType = 0
	LteRrcChannelType_DL_CCCH          LteRrcChannelType = 1
	LteRrcChannelType_DL_DCCH          LteRrcChannelType = 2
	LteRrcChannelType_UL_CCCH          LteRrcChannelType = 3
	LteRrcChannelType_UL_DCCH          LteRrcChannelType = 4
	LteRrcChannelType_BCCH_BCH         LteRrcChannelType = 5
	LteRrcChannelType_BCCH_DL_SCH      LteRrcChannelType = 6
	LteRrcChannelType_PCCH             LteRrcChannelType = 7
	LteRrcChannelType_MCCH             LteRrcChannelType = 8
	LteRrcChannelType_BCCH_BCH_MBMS    LteRrcChannelType = 9
	LteRrcChannelType_BCCH_DL_SCH_BR   LteRrcChannelType = 10
	LteRrcChannelType_BCCH_DL_SCH_MBMS LteRrcChannelType = 11
	LteRrcChannelType_SC_MCCH          LteRrcChannelType = 12
	LteRrcChannelType_SBCCH_SL_BCH     LteRrcChannelType = 13
	LteRrcChannelType_SBCCH_SL_BCH_V2X LteRrcChannelType = 14
	LteRrcChannelType_DL_CCCH_NB       LteRrcChannelType = 15
	LteRrcChannelType_DL_DCCH_NB       LteRrcChannelType = 16
	LteRrcChannelType_UL_CCCH_NB       LteRrcChannelType = 17
	LteRrcChannelType_UL_DCCH_NB       LteRrcChannelType = 18
	LteRrcChannelType_BCCH_BCH_NB      LteRrcChannelType = 19
	LteRrcChannelType_BCCH_BCH_TDD_NB  LteRrcChannelType = 20
	LteRrcChannelType_BCCH_DL_SCH_NB   LteRrcChannelType = 21
	LteRrcChannelType_PCCH_NB          LteRrcChannelType = 22
	LteRrcChannelType_SC_MCCH_NB       LteRrcChannelType = 23
)

// Enum value maps for LteRrcChannelType.
var (
	LteRrcChannelType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "DL_CCCH",
		2:  "DL_DCCH",
		3:  "UL_CCCH",
		4:  "UL_DCCH",
		5:  "BCCH_BCH",
		6:  "BCCH_DL_SCH",
		7:  "PCCH",
		8:  "MCCH",
		9:  "BCCH_BCH_MBMS",
		10: "BCCH_DL_SCH_BR",
		11: "BCCH_DL_SCH_MBMS",
		12: "SC_MCCH",
		13: "SBCCH_SL_BCH",
		14: "SBCCH_SL_BCH_V2X",
		15: "DL_CCCH_NB",
		16: "DL_DCCH_NB",
		17: "UL_CCCH_NB",
		18: "UL_DCCH_NB",
		19: "BCCH_BCH_NB",
		20: "BCCH_BCH_TDD_NB",
		21: "BCCH_DL_SCH_NB",
		22: "PCCH_NB",
		23: "SC_MCCH_NB",
	}
	LteRrcChannelType_value = map[string]int32{
		"UNKNOWN":          0,
		"DL_CCCH":          1,
		"DL_DCCH":          2,
		"UL_CCCH":          3,
		"UL_DCCH":          4,
		"BCCH_BCH":         5,
		"BCCH_DL_SCH":      6,
		"PCCH":             7,
		"MCCH":             8,
		"BCCH_BCH_MBMS":    9,
		"BCCH_DL_SCH_BR":   10,
		"BCCH_DL_SCH_MBMS": 11,
		"SC_MCCH":          12,
		"SBCCH_SL_BCH":     13,
		"SBCCH_SL_BCH_V2X": 14,
		"DL_CCCH_NB":       15,
		"DL_DCCH_NB":       16,
		"UL_CCCH_NB":       17,
		"UL_DCCH_NB":       18,
		"BCCH_BCH_NB":      19,
		"BCCH_BCH_TDD_NB":  20,
		"BCCH_DL_SCH_NB":   21,
		"PCCH_NB":          22,
		"SC_MCCH_NB":       23,
	}
)

func (x LteRrcChannelType) Enum() *LteRrcChannelType {
	p := new(LteRrcChannelType)
	*p = x
	return p
}

func (x LteRrcChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LteRrcChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_enumTypes[0].Descriptor()
}

func (LteRrcChannelType) Type() protoreflect.EnumType {
	return &file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_enumTypes[0]
}

func (x LteRrcChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LteRrcChannelType.Descriptor instead.
func (LteRrcChannelType) EnumDescriptor() ([]byte, []int) {
	return file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDescGZIP(), []int{0}
}

var File_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto protoreflect.FileDescriptor

var file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDesc = []byte{
	0x0a, 0x42, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x74, 0x65, 0x72, 0x72, 0x63, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6c, 0x74, 0x65, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x6c, 0x74, 0x65, 0x72,
	0x72, 0x63, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x90, 0x03,
	0x0a, 0x11, 0x4c, 0x74, 0x65, 0x52, 0x72, 0x63, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x4c, 0x5f, 0x44, 0x43, 0x43, 0x48, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4c,
	0x5f, 0x43, 0x43, 0x43, 0x48, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4c, 0x5f, 0x44, 0x43,
	0x43, 0x48, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x43, 0x43, 0x48, 0x5f, 0x42, 0x43, 0x48,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x43, 0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43,
	0x48, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x43, 0x43, 0x48, 0x10, 0x07, 0x12, 0x08, 0x0a,
	0x04, 0x4d, 0x43, 0x43, 0x48, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x43, 0x43, 0x48, 0x5f,
	0x42, 0x43, 0x48, 0x5f, 0x4d, 0x42, 0x4d, 0x53, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x43,
	0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x5f, 0x42, 0x52, 0x10, 0x0a, 0x12, 0x14,
	0x0a, 0x10, 0x42, 0x43, 0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x5f, 0x4d, 0x42,
	0x4d, 0x53, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x43, 0x5f, 0x4d, 0x43, 0x43, 0x48, 0x10,
	0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x42, 0x43, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x5f, 0x42, 0x43,
	0x48, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x42, 0x43, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x5f,
	0x42, 0x43, 0x48, 0x5f, 0x56, 0x32, 0x58, 0x10, 0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4c, 0x5f,
	0x43, 0x43, 0x43, 0x48, 0x5f, 0x4e, 0x42, 0x10, 0x0f, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4c, 0x5f,
	0x44, 0x43, 0x43, 0x48, 0x5f, 0x4e, 0x42, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4c, 0x5f,
	0x43, 0x43, 0x43, 0x48, 0x5f, 0x4e, 0x42, 0x10, 0x11, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4c, 0x5f,
	0x44, 0x43, 0x43, 0x48, 0x5f, 0x4e, 0x42, 0x10, 0x12, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x43, 0x43,
	0x48, 0x5f, 0x42, 0x43, 0x48, 0x5f, 0x4e, 0x42, 0x10, 0x13, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x43,
	0x43, 0x48, 0x5f, 0x42, 0x43, 0x48, 0x5f, 0x54, 0x44, 0x44, 0x5f, 0x4e, 0x42, 0x10, 0x14, 0x12,
	0x12, 0x0a, 0x0e, 0x42, 0x43, 0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x5f, 0x4e,
	0x42, 0x10, 0x15, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x43, 0x43, 0x48, 0x5f, 0x4e, 0x42, 0x10, 0x16,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x43, 0x5f, 0x4d, 0x43, 0x43, 0x48, 0x5f, 0x4e, 0x42, 0x10, 0x17,
	0x42, 0x30, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x01, 0x5a, 0x15, 0x63, 0x72, 0x61,
	0x78, 0x69, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDescOnce sync.Once
	file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDescData = file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDesc
)

func file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDescGZIP() []byte {
	file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDescOnce.Do(func() {
		file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDescData)
	})
	return file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDescData
}

var file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_goTypes = []any{
	(LteRrcChannelType)(0), // 0: com.craxiom.messaging.lterrcchanneltype.LteRrcChannelType
}
var file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_init() }
func file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_init() {
	if File_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_goTypes,
		DependencyIndexes: file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_depIdxs,
		EnumInfos:         file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_enumTypes,
	}.Build()
	File_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto = out.File
	file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_rawDesc = nil
	file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_goTypes = nil
	file_com_craxiom_messaging_lterrcchanneltype_lte_rrc_channel_type_proto_depIdxs = nil
}
