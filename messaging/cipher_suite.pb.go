//*
// Defines the Cipher Suite values used in the 802.11 Survey message.
//
// This protobuf definition is provided as a convenience only. See the official API documentation for the true field
// schema.
//
// It is necessary to define this enum in an individual file so that duplicate enum values can be used. This file
// specifies a different protobuf package than other enums so that the enum value scope is different than all other
// enums.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: com/craxiom/messaging/wifi/ciphersuite/cipher_suite.proto

package messaging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This enum defines the Cipher Suites field of the 802.11 messages.
//
// Note that a single Beacon, Probe Response, Association Request, or Reassociation Request Frame can contain
// multiple Cipher Suites, and multiple AKM suites.  It is necessary to list all of the supported suites so that a
// proper security assessment can be performed on the Access Point.
//
// Following are how the enum values map to IEEE Std 802.11-2012
// 00-0F-AC:1 - WEP_40
// 00-0F-AC:2 - TKIP
// 00-0F-AC:4 - CCMP
// 00-0F-AC:5 - WEP_104
//
// New from IEE Std 802.11-2016
// 00-0F-AC:8 - GCMP-128
// 00-0F-AC:9 - GCMP-256
// 00-0F-AC:10 - CCMP-256
// 00-0F-AC:11 - BIP-GMAC-128
// 00-0F-AC:12 - BIP-GMAC-256
// 00-0F-AC:13 - BIP-CMAC-256
//
// And OPEN is no Cipher.
type CipherSuite int32

const (
	CipherSuite_UNKNOWN      CipherSuite = 0
	CipherSuite_WEP_40       CipherSuite = 1
	CipherSuite_TKIP         CipherSuite = 2
	CipherSuite_CCMP         CipherSuite = 3
	CipherSuite_WEP_104      CipherSuite = 4
	CipherSuite_GCMP_128     CipherSuite = 5
	CipherSuite_GCMP_256     CipherSuite = 6
	CipherSuite_CCMP_256     CipherSuite = 7
	CipherSuite_BIP_GMAC_128 CipherSuite = 8
	CipherSuite_BIP_GMAC_256 CipherSuite = 9
	CipherSuite_BIP_CMAC_256 CipherSuite = 10
	CipherSuite_OPEN         CipherSuite = 13
	CipherSuite_WEP          CipherSuite = 14 // For the times where it is unknown if WEP_40 or WEP_104 is being employed.
)

// Enum value maps for CipherSuite.
var (
	CipherSuite_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "WEP_40",
		2:  "TKIP",
		3:  "CCMP",
		4:  "WEP_104",
		5:  "GCMP_128",
		6:  "GCMP_256",
		7:  "CCMP_256",
		8:  "BIP_GMAC_128",
		9:  "BIP_GMAC_256",
		10: "BIP_CMAC_256",
		13: "OPEN",
		14: "WEP",
	}
	CipherSuite_value = map[string]int32{
		"UNKNOWN":      0,
		"WEP_40":       1,
		"TKIP":         2,
		"CCMP":         3,
		"WEP_104":      4,
		"GCMP_128":     5,
		"GCMP_256":     6,
		"CCMP_256":     7,
		"BIP_GMAC_128": 8,
		"BIP_GMAC_256": 9,
		"BIP_CMAC_256": 10,
		"OPEN":         13,
		"WEP":          14,
	}
)

func (x CipherSuite) Enum() *CipherSuite {
	p := new(CipherSuite)
	*p = x
	return p
}

func (x CipherSuite) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CipherSuite) Descriptor() protoreflect.EnumDescriptor {
	return file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_enumTypes[0].Descriptor()
}

func (CipherSuite) Type() protoreflect.EnumType {
	return &file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_enumTypes[0]
}

func (x CipherSuite) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CipherSuite.Descriptor instead.
func (CipherSuite) EnumDescriptor() ([]byte, []int) {
	return file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDescGZIP(), []int{0}
}

var File_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto protoreflect.FileDescriptor

var file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDesc = []byte{
	0x0a, 0x39, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x77, 0x69, 0x66, 0x69, 0x2f, 0x63, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2f, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x5f,
	0x73, 0x75, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x2e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x75,
	0x69, 0x74, 0x65, 0x2a, 0xba, 0x01, 0x0a, 0x0b, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x53, 0x75,
	0x69, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x50, 0x5f, 0x34, 0x30, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x54, 0x4b, 0x49, 0x50, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x43, 0x4d, 0x50, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x50, 0x5f, 0x31, 0x30, 0x34, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x47, 0x43, 0x4d, 0x50, 0x5f, 0x31, 0x32, 0x38, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x47,
	0x43, 0x4d, 0x50, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x43, 0x4d,
	0x50, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x49, 0x50, 0x5f, 0x47,
	0x4d, 0x41, 0x43, 0x5f, 0x31, 0x32, 0x38, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x49, 0x50,
	0x5f, 0x47, 0x4d, 0x41, 0x43, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x42,
	0x49, 0x50, 0x5f, 0x43, 0x4d, 0x41, 0x43, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x0a, 0x12, 0x08, 0x0a,
	0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x45, 0x50, 0x10, 0x0e,
	0x42, 0x35, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x50, 0x01,
	0x5a, 0x15, 0x63, 0x72, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDescOnce sync.Once
	file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDescData = file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDesc
)

func file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDescGZIP() []byte {
	file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDescOnce.Do(func() {
		file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDescData)
	})
	return file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDescData
}

var file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_goTypes = []any{
	(CipherSuite)(0), // 0: com.craxiom.messaging.wifi.ciphersuite.CipherSuite
}
var file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_init() }
func file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_init() {
	if File_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_goTypes,
		DependencyIndexes: file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_depIdxs,
		EnumInfos:         file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_enumTypes,
	}.Build()
	File_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto = out.File
	file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_rawDesc = nil
	file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_goTypes = nil
	file_com_craxiom_messaging_wifi_ciphersuite_cipher_suite_proto_depIdxs = nil
}
